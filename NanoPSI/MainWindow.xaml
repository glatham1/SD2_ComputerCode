<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:NanoPSI"
    xmlns:lcu="http://schemas.arction.com/charting/ultimate/"
    x:Class="NanoPSI.MainWindow"
    mc:Ignorable="d"
    Title="NanoPSI" Height="1080" Width="1920"
    FontFamily="Segoe UI">

    <Grid Background="#F5F5F5">
        <!-- Define three columns: left, middle, right -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="2.5*" />
        </Grid.ColumnDefinitions>

        <!-- Set the styles for controls -->
        <Grid.Resources>
            <Style TargetType="GroupBox">
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="BorderBrush" Value="#DDDDDD"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="#FFFFFF"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="BorderBrush" Value="#AAAAAA"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Background" Value="#D3D3D3"/>
                <Setter Property="BorderBrush" Value="#AAAAAA"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderBrush" Value="#AAAAAA"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
            <Style TargetType="DataGrid">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderBrush" Value="#AAAAAA"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
        </Grid.Resources>

        <!-- Background panels for each column -->
        <Border Background="#FFFFFF" Grid.Column="0"/>
        <Border Background="#D3D3D3" Grid.Column="1"/>

        <!-- Left section with GroupBoxes -->
        <StackPanel Grid.Column="0">

            <!-- Logo and Sponsorship section -->
            <StackPanel HorizontalAlignment="Center" Margin="10">
                <Label Content="NanoPSI" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="60" FontWeight="Bold" />
                <!-- Adjust the path and Height accordingly -->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5">
                    <TextBlock Text="sponsored by " 
                       VerticalAlignment="Center" 
                       FontWeight="Bold" 
                       FontSize="12" />
                    <Image Source="/Nanotech_Logo.jpg" Height="40" Width="200" />
                </StackPanel>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                <!-- Microcontroller Connection GroupBox -->
                <GroupBox Header="Test Fixture Connection">
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                        <ComboBox x:Name="mcuConnect" Width="200" Height="30" Margin="10" SelectionChanged="mcuConnect_SelectionChanged">
                            <ComboBoxItem Content="Select Bluetooth Device" IsSelected="True" />
                        </ComboBox>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Status:"/>
                            <Label Name="mcuStatus" Content="Not Connected" Foreground="Red"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <!-- SQL Server Status GroupBox -->
                <GroupBox Header="Database Connection">
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Status:"/>
                            <Label Content="Not Connected" Foreground="Red" Name="sqlConnLabel"/>
                            <!-- Update the Foreground color based on actual status -->
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

            </StackPanel>

            <!-- Threshold Control GroupBox -->
            <GroupBox Header="Threshold Control">
                <StackPanel HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Min Threshold:" Width="100" VerticalAlignment="Center" />
                        <TextBox Name="minThresh" TextChanged="MinThresh_TextChanged" Width="100"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Max Threshold:" Width="100" VerticalAlignment="Center" />
                        <TextBox Name="maxThresh" TextChanged="MaxThresh_TextChanged" Width="100"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <!-- Testing GroupBox -->
            <GroupBox Header="Testing Control">
                <StackPanel HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <Button Name="startButton" Content="Start Pressure Test" Click="Button_Click_2" Height="45" IsEnabled="False" />
                        <Button Name="pauseButton" Content="Pause" Click="Button_Click_PauseTest" Margin="5,0,0,0" Height="45" IsEnabled="False" />
                        <Button Name="stopButton" Content="Stop Pressure Test" Click="Button_Click_StopTest" Margin="5,0,0,0" Height="45" IsEnabled="False" />
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                        <Label Content="Start Time:" />
                        <Label x:Name="lblStartTime" Content="00:00" />
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                        <Label Content="Elapsed Time:" />
                        <Label x:Name="lblElapsedTime" Content="00:00" />
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                        <Label Content="End Time:" />
                        <Label x:Name="lblEndTime" Content="00:00" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <!-- New GroupBox for Save and Find Data buttons -->
            <GroupBox Header="Data Management">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                    <!-- StackPanel for Save Data Button and its label -->
                    <StackPanel VerticalAlignment="Center" Margin="5" Width="250" Height="Auto">
                        <Button Content="Save Data" Width="200" HorizontalAlignment="Center" Click="Button_Click_3" Name="SaveButton" FontWeight="Bold" IsEnabled="False" />
                        <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Saves all pressure transducer data." TextWrapping="Wrap" TextAlignment="Center"/>
                        </Label>
                    </StackPanel>

                    <!-- StackPanel for Find Data Button and its label -->
                    <StackPanel VerticalAlignment="Center" Margin="5" Width="250" Height="Auto">
                        <Button Content="Find Data" Width="200" HorizontalAlignment="Center" Click="Button_Click_4" Name="FindButton" IsEnabled="False"/>
                        <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Find and import pressure transducer data." TextWrapping="Wrap" TextAlignment="Center"/>
                        </Label>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <!-- Middle section with Real Time Pressure Data GroupBox and LightningChart -->
        <StackPanel Grid.Column="1">
            <GroupBox Header="Pressure Data">
                <DataGrid AutoGenerateColumns="False" Name="dataGrid" IsReadOnly="False" Height="400" Width="Auto" CellEditEnding="DataGrid_CellEditEnding">
                    <DataGrid.Resources>
                        <local:PressureValidationConverter x:Key="PressureValidationConverter"/>
                        <!-- Define a style for the TextBlock in the Pressure (PSI) column -->
                        <Style x:Key="PressureValueStyle" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LastPressureValue, Converter={StaticResource PressureValidationConverter}}" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive}" Value="False">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="Foreground" Value="Gray"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ConnectionStatus}" Value="Not Connected">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="Foreground" Value="Gray"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns>
                        <!-- Transducer Active Checkbox Column -->
                        <DataGridCheckBoxColumn Header="Transducer Active" Binding="{Binding IsActive}" Width="0.75*"/>

                        <!-- Transducer # Column -->
                        <DataGridTextColumn Header="Transducer #" Binding="{Binding TransducerName}" Width="2*"/>

                        <!-- Pressure (PSI) Column with conditional formatting -->
                        <DataGridTemplateColumn Header="Pressure (PSI)" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=LastPressureValue, StringFormat=N2}" Style="{StaticResource PressureValueStyle}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Time (s) Column -->
                        <DataGridTextColumn Header="Time (s)" Binding="{Binding Path=LastTimeValue, StringFormat=N2}" Width="*"/>

                        <!-- Connection Status Column -->
                        <DataGridTextColumn Header="Connection Status" Binding="{Binding ConnectionStatus}" Width="*"/>

                        <!-- Offset Column -->
                        <DataGridTextColumn Header="Offset" Binding="{Binding Offset}" Width="0.5*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>

            <GroupBox xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" Background="#202020">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <CheckBox Content="Show values next to cursor" IsChecked="True" Name="checkBoxShowValuesNextToCursor" Checked="checkBox1_CheckedChanged" Unchecked="checkBox1_CheckedChanged" Foreground="White"/>
                        <Grid Width="8"/>
                        <CheckBox Content="Snap to the nearest data point" IsChecked="True" Name="checkBoxSnapToNearestDataPoint" Checked="checkBoxSnapToNearestDataPoint_Checked" Unchecked="checkBoxSnapToNearestDataPoint_Unchecked" Foreground="White" />
                        <Grid Width="8"/>
                        <RadioButton Content="Accurate" Name="radioButtonAccurate" IsChecked="True" Foreground="White"/>
                        <Grid Width="8"/>
                        <RadioButton Content="Coarse (fast)" Name="radioButtonCoarse" Foreground="White"/>
                    </StackPanel>
                    <Grid Grid.Row="1" Name="gridChart" Height="500" />
                </Grid>
            </GroupBox>
        </StackPanel>
    </Grid>
</Window>
